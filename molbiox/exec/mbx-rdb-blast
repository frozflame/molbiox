#!/usr/bin/env python3
# coding: utf-8

from __future__ import unicode_literals, print_function

import re
import argparse
import dataset

from molbiox.algor import relational
from molbiox.iofmt import blast


def convert_url(url):
    """Convert URL to use connector OurSQL"""
    return re.sub(r'^mysql:', 'mysql+oursql:', url)


def convert_record(record):
    """Convert dict keys to valid column name"""
    keys = (k.replace('.', '_') for k in record.keys())
    record = dict(zip(keys, record.values()))

    # TODO: a better solution for subject_titles
    if 'subject_titles' in record:
        record['subject_titles'] = ''
    return record


if __name__ == '__main__':
    desc = 'MBX Script'
    parser = argparse.ArgumentParser(description=desc)

    parser.add_argument(
        '--url', metavar='URL',
        default='mysql://root@localhost/test?charset=utf8',
        help='identify target database with URL')
    
    parser.add_argument(
        '--table', metavar='table', default='blasttab',
        help='name of target table')

    parser.add_argument(
        '--tophit', action='store_true',
        help='only select top hit for each query')

    parser.add_argument(
        'filenames', metavar='DATA-file', nargs='+',
        help='blast output outfmt 7 with all columns')

    args = parser.parse_args()

    db = dataset.connect(convert_url(args.url))
    table = db.get_table(args.table)

    for filename in args.filenames:
            records = blast.read_fmt7a(filename)
            if args.tophit:
                hitdict = relational.select_top_records(records, 'query.id')
                records = hitdict.values()

            for rec in records:
                rec = convert_record(rec)
                table.insert(rec)

